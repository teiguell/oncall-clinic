Quiero que me ayudes a implementar el flujo completo de registro de m√©dicos para mi aplicaci√≥n web (React + Node.js + MongoDB).

üß© Requisitos clave:
- El registro de m√©dicos debe hacerse mediante email y contrase√±a, o usando cuenta de Google o Apple (OAuth2).
- Al registrarse, deben rellenar un formulario y subir documentos.
- El m√©dico no estar√° operativo hasta ser verificado manualmente por un administrador.
- El paciente ver√°: nombre completo, n√∫mero de colegiado y foto del m√©dico.

üéØ Estructura esperada:

1. Frontend (React + Tailwind CSS):
   - Formulario de registro dividido en secciones:
     - Datos b√°sicos: nombre completo, email, contrase√±a (o acceso con Google/Apple).
     - Documentaci√≥n:
       - Foto tipo carn√© (upload).
       - Foto DNI (frontal y reverso, dos campos de carga).
       - N√∫mero de colegiado (campo obligatorio).
     - Validaci√≥n de campos y previsualizaci√≥n de archivos cargados.
   - Bot√≥n de env√≠o del registro ‚Üí POST `/api/register/doctor`

2. Backend (Node.js + Express + MongoDB):
   - Endpoint para guardar los datos y documentos.
   - Almacenar la informaci√≥n en la colecci√≥n `doctors`, con estos campos:
     ```ts
     {
       fullName: string,
       email: string,
       passwordHash: string,
       dniFrontUrl: string,
       dniBackUrl: string,
       profilePhotoUrl: string,
       colegiadoNumber: string,
       isVerified: false,
       createdAt: Date
     }
     ```
   - Encriptar la contrase√±a con bcrypt.
   - Guardar archivos en almacenamiento (por ahora simulado o usar Firebase/S3 en el futuro).

3. Autenticaci√≥n:
   - Soporte para email/contrase√±a con JWT.
   - OAuth2 con Google y Apple.
   - Registro + login deben unificarse bajo un mismo sistema (`/api/auth`).

4. Panel de administraci√≥n (versi√≥n m√≠nima):
   - Lista de m√©dicos pendientes de verificaci√≥n (`isVerified: false`).
   - Mostrar documentos cargados.
   - Bot√≥n ‚ÄúVerificar m√©dico‚Äù.
   - Al hacer clic, cambiar `isVerified: true`.

5. √Årea privada del m√©dico (una vez verificado):
   - Mostrar campo editable para a√±adir su IBAN.
   - Mostrar resumen de ingresos acumulados (simulado por ahora), con desglose de:
     - Total cobrado.
     - Porcentaje de comisi√≥n aplicado por la plataforma.
     - Total neto a recibir.

6. Pacientes:
   - Solo pueden ver m√©dicos verificados (`isVerified: true`).
   - En la ficha del m√©dico mostrar: nombre, n√∫mero de colegiado, foto.

Organiza todo el c√≥digo con buenas pr√°cticas, usa DTOs y validaciones en backend, y crea componentes desacoplados en frontend.
